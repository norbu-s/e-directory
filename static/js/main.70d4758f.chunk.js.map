{"version":3,"sources":["components/Table/index.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","console","log","users","map","user","src","picture","medium","alt","name","first","last","phone","email","location","city","gender","cell","Search","type","value","searchText","onChange","event","setSearchText","target","App","React","useState","setUsers","useEffect","fetch","then","res","json","results","filteredUsers","filter","toLowerCase","includes","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAsBeA,MAnBf,SAAeC,GAEX,OADAC,QAAQC,IAAIF,GAER,kCACI,gCACA,+BAAI,uCAAc,4CAAmB,2CAAkB,uCAAc,uCAAc,0CAAiB,6CAErG,gCAEKA,EAAMG,MAAMC,KAAI,SAAAC,GACZ,OACC,+BAAoB,6BAAI,qBAAKC,IAAKD,EAAKE,QAAQC,OAAQC,IAAI,OAAS,6BAAKJ,EAAKK,KAAKC,QAAW,6BAAKN,EAAKK,KAAKE,OAAU,6BAAKP,EAAKQ,QAAW,6BAAKR,EAAKS,QAAW,6BAAKT,EAAKU,SAASC,OAAU,6BAAKX,EAAKY,WAA/LZ,EAAKa,eCApBC,MAZf,SAAgBnB,GACZ,OACI,8BACI,uBAAOoB,KAAK,OAAOC,MAAOrB,EAAMsB,WAAYC,SAAa,SAACC,GACtDxB,EAAMyB,cAAeD,EAAME,OAAOL,OAC9BpB,QAAQC,IAAIsB,EAAME,OAAOL,aC8B9BM,MAhCf,WACE,MAAyBC,IAAMC,SAC7B,IADF,mBAAM1B,EAAN,KAAa2B,EAAb,KAGA,EAAmCF,IAAMC,SACvC,IADF,mBAAMP,EAAN,KAAkBG,EAAlB,KAIAG,IAAMG,WAAU,WACdC,MAAM,wCACLC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UACVF,MAAK,SAAA9B,GACN2B,EAAS3B,EAAMiC,cAEf,IACF,IAAMC,EAAgBlC,EAAMmC,QAAS,SAACjC,GAClC,QAAIA,EAAKK,KAAKC,MAAM4B,cAAcC,SAASlB,EAAWiB,kBAK5D,OADAtC,QAAQC,IAAI,SAASC,GAEnB,sBAAKsC,UAAU,MAAf,UACE,qDACA,cAAC,EAAD,CAAQnB,WAAYA,EAAYG,cAAeA,IAC/C,cAAC,EAAD,CAAOtB,MAAOkC,QCnBLK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.70d4758f.chunk.js","sourcesContent":["import \"./style.css\";\n\n\nfunction Table(props) {\n    console.log(props)\n    return (\n        <table>\n            <thead>\n            <tr><td>Photo</td><td>First Name</td><td>Last Name</td><td>Phone</td><td>Email</td><td>Location</td><td>Gender</td></tr>\n            </thead>\n           <tbody>{\n                //js to cycle to all user print another row with first name and last name.(m)\n                props.users.map(user => {\n                    return (\n                     <tr key={user.cell}><td><img src={user.picture.medium} alt=\"\"/></td><td>{user.name.first}</td><td>{user.name.last}</td><td>{user.phone}</td><td>{user.email}</td><td>{user.location.city}</td><td>{user.gender}</td></tr>\n                        )\n                    })\n            }</tbody> \n        </table>\n    )\n}\n\nexport default Table","import React from 'react'\n\nfunction Search(props){\n    return (\n        <div>\n            <input type=\"text\" value={props.searchText} onChange = { (event) => {\n                props.setSearchText (event.target.value)\n                    console.log(event.target.value)\n        }\n            }/>\n        </div>\n    )\n}\n\nexport default Search\n","import './App.css';\nimport Table from './components/Table';\nimport React from \"react\";\nimport Search from './components/Search';\n\nfunction App() {\n  const[users, setUsers] = React.useState(\n    []\n  )\n  const[searchText, setSearchText] = React.useState(\n    \"\"\n  )\n  //API call to get employee details//\n  React.useEffect(function () {\n    fetch(\"https://randomuser.me/api?results=10\")\n    .then(res => {\n      return(res.json())\n    }).then(users => {\n      setUsers(users.results) \n    })\n    },[])\n    const filteredUsers = users.filter ( (user) => {\n        if (user.name.first.toLowerCase().includes(searchText.toLowerCase()))\n        return true;\n        else return false;\n    })\n  console.log(\"return\",users)\n  return (\n    <div className=\"App\">\n      <h1>Employees Directory</h1>\n      <Search searchText={searchText} setSearchText={setSearchText}/>\n      <Table users={filteredUsers}/>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}